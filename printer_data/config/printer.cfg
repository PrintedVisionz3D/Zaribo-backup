## 09 May 2023

[include mainsail.cfg]
[include KAMP_Settings.cfg]


# This file contains common pin mappings for the BigTreeTech OctoPus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[safe_z_home] section
## Homing end position				[gcode_macro G32] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Probe pin								[probe] section
## Fine tune E steps					[extruder] section



[mcu]
##	[X in MOTOR0] - B Motor
##	[Y in MOTOR1] - A Motor
##	[E in MOTOR6] - Extruder
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_200044000950314B33323220-if00
#restart_method: command
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    125, 125, 20  # an example

[virtual_sdcard]
path: ~/printer_data/gcodes
[display_status]
[pause_resume]

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 10000    			
#max_accel_to_decel: 10000
max_z_velocity: 15 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

[exclude_object]

#####################################################################
# 	Inout Shaper Settings
#####################################################################

[input_shaper]



#[probe]
#pin = P2.0
#x_offset = 0
#y_offset = 0
#z_offset = 0
#activate_gcode:
#	G4 P500

#####################################################################
# 	Filament Runout Sensor
#####################################################################


#####################################################################
# 	Verify Heater
#####################################################################

[verify_heater extruder]
heating_gain: 2
check_gain_time:35  
hysteresis: 10  
max_error: 130

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

## X Stepper on MOTOR0(B Motor)
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: PG6
position_min: 0
position_endstop: 0
position_max: 300
homing_speed: 120  #Max 100
homing_retract_dist: 5
homing_positive_dir: false

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8 
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4

## Y Stepper on MOTOR1 (A Motor)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 64
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: -5
position_endstop: 300
position_max: 305
homing_speed: 120  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.7
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 0
driver_TBL: 2
driver_TOFF: 2
driver_HEND: 1
driver_HSTRT: 4
driver_PWM_LIM: 8 
driver_PWM_GRAD: 8
driver_PWM_FREQ: 1
driver_PWM_REG: 4
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left on MOTOR5
[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
position_max: 310
position_min: -3.0
homing_speed: 60
#second_homing_speed: 3
#homing_retract_dist: 3

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6 
interpolate: true
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z1 Stepper - Rear Left on MOTOR3
[stepper_z1]
step_pin: PE2
dir_pin: PE3
enable_pin: !PD4
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PE1
interpolate: true
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z2 Stepper - Rear Right on MOTOR2
[stepper_z2]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PE4
interpolate: true
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z3 Stepper - Front Right on MOTOR6
[stepper_z3]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PC7
interpolate: true
run_current: 0.4
hold_current: 0.4
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MOTOR4
[extruder]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2

#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4

##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 35  ##35.05258682016 #Orbiter 2.0 4.637
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 7.5:1 ## 7.5:1				#Orbiter Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: PA2
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF4
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 500
max_extrude_cross_section: 5

#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.016
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

[firmware_retraction]
retract_length: 0
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

##	E0 on MOTOR6
##	Make sure to update below for your relevant driver (2208 or 2209)

[tmc2209 extruder]
uart_pin: PF2
interpolate: false
run_current: 0.60
hold_current: 0.1
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - BED_OUT
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 0.6
min_temp: 0
max_temp: 120
pwm_cycle_time: 0.02227 # 44.9Hz
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling

# Select the probe port by type:
## For the PROBE port; use this with the original OMRON sensor.
# pin: ~!PB7
## For the spare endstop port; use this with the Fotek PL-05N (or generic) inductive probe
# pin: ^PG11
## For Octopus Pro Probe port; NPN and PNP proximity switch types can be set by jumper
# pin: ^PC5

#--------------------------------------------------------------------

[probe]
pin: PG10
x_offset: 0.000                           
y_offset: 0.000 
#z_offset: -2.035
speed: 10   # when using induction, set to 10
lift_speed: 50 #remove when using induction
samples: 3
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.05
samples_tolerance_retries: 20
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}


#####################################################################
# 	Fan Control
#####################################################################

[multi_pin dual_fan]
pins: PA8,PD13

[fan]
##	Print Cooling Fan - CNC_FAN0
pin: multi_pin:dual_fan
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10


[heater_fan hotend_fan]
##	Hotend Fan - CNC_FAN1
pin: PE5
max_power: 1
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[heater_fan controller_fan]
##	Controller fan - CNC_FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 45.0

#[heater_fan exhaust_fan]
##	Exhaust fan - CNC_FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight]
# Chamber Lighting - HE1 Connector (Optional)
pin: PA3
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.010

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
#timeout: 1800
gcode:
  TURN_OFF_HEATERS

[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
home_xy_position:155,155
speed:500
z_hop:5

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
  	10,10
	10,290
	290,290
	290,10

speed: 500
horizontal_move_z: 10
retries: 3
retry_tolerance: 0.015  #0.0075
max_adjust: 10


########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have
#--------------------------------------------------------------------



#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#menu_timeout: 40
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2


[display]
lcd_type: emulated_st7920
spi_software_miso_pin: EXP2_2
spi_software_mosi_pin: EXP1_3
spi_software_sclk_pin: EXP1_5
spi_speed: 1000000
en_pin: EXP1_4
encoder_pins: !EXP2_5, !EXP2_3
click_pin: ^!EXP1_2

[output_pin beeper]
pin: EXP1_1

#--------------------------------------------------------------------

#[display]
##	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#contrast: 63
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

#[neopixel btt_mini12864]
##	To control Neopixel RGB in mini12864 display
#pin: EXP1_6
#chain_count: 3
#initial_RED: 0.1
#initial_GREEN: 0.5
#initial_BLUE: 0.0
#color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100



#--------------------------------------------------------------------

#[axis_twist_compensation]
#speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#calibrate_start_x: 10
#   Defines the minimum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the starting
#   calibration position.
#calibrate_end_x: 300
#   Defines the maximum X coordinate of the calibration
#   This should be the X coordinate that positions the nozzle at the ending
#   calibration position.
#calibrate_y: 150
#   Defines the Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle during the
#   calibration process. This parameter is recommended to
#   be near the center of the bed

# For Y-axis twist compensation, specify the following parameters:
#calibrate_start_y: 300
#   Defines the minimum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the starting
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
#calibrate_end_y: 10
#   Defines the maximum Y coordinate of the calibration
#   This should be the Y coordinate that positions the nozzle at the ending
#   calibration position for the Y axis. This parameter must be provided if
#   compensating for Y axis twist.
#calibrate_x: 150
#   Defines the X coordinate of the calibration for Y axis twist compensation
#   This should be the X coordinate that positions the nozzle during the
#   calibration process for Y axis twist compensation. This parameter must be
#   provided and is recommended to be near the center of the bed.


#####################################################################
# 	Macros
#####################################################################

[gcode_macro G32]
gcode:
    
    # Set and wait for bed to reach temperature for Tap
    M190 S80
    # Set and wait for nozzle to reach temperature
    M109 S150
    #{% set BED_TEMP = params.BED_TEMP|default(90)|float %}
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
    # Set and wait for bed to reach temperature for Tap
    #M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    #M109 S{EXTRUDER_TEMP}
    #-------------------------------------------------------------------
    BED_MESH_CLEAR
    STATUS_HOMING
    G28
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    CLEAN_NOZZLE
    STATUS_HOMING
    G28
    BED_MESH_PROFILE LOAD="default"
    STATUS_READY
    #--------------------------------------------------------------------
    #CALIBRATE_Z

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|int %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
	
	CLEAR_PAUSE
    M190 S{BED_TEMP} # Wait for the bed to reach temperature
    G90 # Use absolute coordinates
    G28 # Home the printer
	QUAD_GANTRY_LEVEL #Level the gantry
	G28 Z #Home the toolhead
    BED_MESH_CALIBRATE #Measure the bed
    BED_MESH_PROFILE LOAD="default"
    G1 Z15 F3000 #Move the toolhead away from the bed
    Smart_Park
    M109 S{EXTRUDER_TEMP} # Set and wait for nozzle to reach temperature
    VORON_PURGE
   

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise it for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-3.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                   ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X300 Y300 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    
    

[gcode_macro G29]
gcode:

 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=default
 G1 X0 Y0 Z5 F8000

[bed_mesh]
speed: 500
horizontal_move_z: 5
mesh_min: 10, 10
mesh_max: 290, 290
fade_start: 0.6
fade_end: 10.0
adaptive_margin: 10
probe_count: 7,7
zero_reference_position: 150, 150
mesh_pps: 2, 3
algorithm: bicubic
bicubic_tension: 0.2
[menu __main __octoprint]
type: disabled
[pause_resume]
recover_velocity: 50 #allows pause resume functionality.

#filament runout sensor
[filament_switch_sensor my_sensor]
pause_on_runout: True
runout_gcode: M600
#insert_gcode: LOAD
#event_delay: 5.0
switch_pin: ^!PG12
  #just a throwaway GCode command to have something in this space. You can add your own.
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
pause_delay: 0.0001

#Below Macro with credit to Hywel Martin #https://github.com/KevinOConnor/klipper/issues/1354
[gcode_macro PARK_MACRO]
gcode:
  M117 PARKING..
  G91
  G1 Z20
  G90
  G1 X150 Y0 F10000


[gcode_macro M600]
gcode:
  M117 Filament Runout
  PAUSE_MACRO
  UNLOAD_FILAMENT

[gcode_macro PAUSE_MACRO]
gcode:
  PARK_MACRO
  SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro PURGE]
gcode:
  M117 PURGING..
  G91
  G1 E45.0 F250
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOAD
    M117  LOADING...
    G91
    G1 Z20 
    G1 E25.0 F1000
    G1 E65 F1200
    G4 P900
    G1 E45.0 F250
    G90
    RESTORE_GCODE_STATE NAME=LOAD

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=UNLOAD
    G91
    G1 E5.0 F1200
    G1 E3.0 F1600
    G1 E-14 F1000
    G1 E-100 F1200
    G90
    RESTORE_GCODE_STATE NAME=UNLOAD

[gcode_macro RESUME_MACRO]
gcode:
  M117  RESUMING...
  RESUME


# Chamber Lighting
[output_pin caselight]
pin: PA3
#max_power: 1.0
#kick_start_time: 0.5
hardware_pwm: True
pwm: true
shutdown_value: 0
value: 100
cycle_time: 0.010
scale: 100
 
# Lighting Control
[gcode_macro lights_off]
gcode:
    SET_PIN PIN=caselight VALUE=0
 
[gcode_macro lights_on]
gcode:
    SET_PIN PIN=caselight VALUE=100
 
[gcode_macro lights_toggle]
gcode:
    {% if printer["output_pin caselight"].value == 100 %}
        lights_off
    {% else %}
        lights_on
    {% endif %}


## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32"
##   "AD595"
##   "PT100 INA826"

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [probe]
#*# z_offset = -0.890
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 28.363
#*# pid_ki = 3.939
#*# pid_kd = 51.053
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 38.397
#*# pid_ki = 1.128
#*# pid_kd = 326.852
#*#
#*# [input_shaper]
#*# shaper_type_x = zv
#*# shaper_freq_x = 44.2
#*# shaper_type_y = zv
#*# shaper_freq_y = 42.8
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.039007, -0.094244, -0.057541
#*# 	  -0.053513, 0.000000, -0.048922
#*# 	  -0.072315, -0.024428, 0.037275
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 3
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 135.0
#*# max_x = 165.0
#*# min_y = 127.75
#*# max_y = 172.25
#*#
#*# [axis_twist_compensation]
#*# z_compensations = -0.001198, 0.081094, 0.010260
#*# compensation_start_x = 10.0
#*# compensation_end_x = 300.0
#*# zy_compensations = 0.002760, 0.047344, 0.040052
#*# compensation_start_y = 300.0
#*# compensation_end_y = 10.0
